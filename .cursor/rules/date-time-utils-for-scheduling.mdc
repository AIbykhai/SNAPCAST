---
description:
globs:
alwaysApply: false
---
# Date/Time Utils for Scheduling

Use date-fns helpers in utils/scheduling/—no manual Date math scattered across components.

## Path Pattern
frontend/src/utils/scheduling/**/*.ts

## Implementation Guidelines
- Centralize all date/time manipulation in dedicated utility functions
- Use date-fns library for consistent date handling
- Create functions for common date operations (format, compare, manipulate)
- Handle timezone conversions consistently
- Export well-named, specific utility functions

## Example Structure
```
frontend/src/utils/scheduling/
  ├── formatters.ts
  ├── calculators.ts
  ├── validators.ts
  ├── timezone.ts
  ├── index.ts
```

## Example Implementation
```typescript
// frontend/src/utils/scheduling/formatters.ts
import { format, parseISO } from 'date-fns';

/**
 * Formats a date for display in the UI
 */
export const formatDateForDisplay = (date: Date | string): string => {
  const dateObj = typeof date === 'string' ? parseISO(date) : date;
  return format(dateObj, 'MMM dd, yyyy');
};

/**
 * Formats a time for display in the UI
 */
export const formatTimeForDisplay = (date: Date | string): string => {
  const dateObj = typeof date === 'string' ? parseISO(date) : date;
  return format(dateObj, 'h:mm a');
};

/**
 * Formats a date and time for display in the UI
 */
export const formatDateTimeForDisplay = (date: Date | string): string => {
  const dateObj = typeof date === 'string' ? parseISO(date) : date;
  return format(dateObj, 'MMM dd, yyyy h:mm a');
};
