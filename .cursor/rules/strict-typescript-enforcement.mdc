---
description:
globs:
alwaysApply: false
---
# Strict TypeScript Enforcement

Project is in strict modeâ€”no any, no non-null assertions (!), always model shape with interfaces or types.

## Path Pattern
tsconfig.json

## Implementation Guidelines
- Enable strict mode in tsconfig.json
- Never use the `any` type - always define proper types
- Avoid non-null assertions (!)
- Define interfaces or types for all data structures
- Use union types instead of type assertions
- Leverage TypeScript's utility types when appropriate

## Expected Configuration
The tsconfig.json should include:

```json
{
  "compilerOptions": {
    "strict": true,
    "noImplicitAny": true,
    "strictNullChecks": true,
    "strictFunctionTypes": true,
    "strictBindCallApply": true,
    "strictPropertyInitialization": true,
    "noImplicitThis": true,
    "useUnknownInCatchVariables": true,
    "alwaysStrict": true
  }
}
```

## Best Practices
- Use interface for object shapes that will be implemented or extended
- Use type for unions, primitives, or object shapes that won't be extended
- Use generics for reusable components and functions
- Define proper return types for all functions
