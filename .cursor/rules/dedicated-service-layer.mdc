---
description:
globs:
alwaysApply: false
---
# Dedicated Service Layer

Business logic belongs in services, not controllers—use one file per service (e.g. UserService.ts, AnalyticsService.ts).

## Path Pattern
backend/src/services/**/*.ts

## Implementation Guidelines
- Separate business logic from controller/route handlers
- One file per service domain (e.g., UserService, ProductService)
- Services should handle data processing, business rules, and external API calls
- Controllers should only handle HTTP request/response and call services
- Services should be stateless and injectable

## Example Structure
```
backend/src/services/
  ├── UserService.ts
  ├── AuthService.ts
  ├── ProductService.ts
  ├── AnalyticsService.ts
  ├── EmailService.ts
```

## Service Pattern Example
```typescript
// UserService.ts
export class UserService {
  async findById(id: string) {
    // Business logic for finding user
  }
  
  async updateProfile(id: string, data: UserUpdateData) {
    // Validation and business logic for profile update
  }
}
```
